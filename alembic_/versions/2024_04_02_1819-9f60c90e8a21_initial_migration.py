"""Initial migration

Revision ID: 9f60c90e8a21
Revises:
Create Date: 2024-04-02 18:19:53.332510+00:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import models.geometry

# revision identifiers, used by Alembic.
revision: str = '9f60c90e8a21'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    op.execute('CREATE EXTENSION IF NOT EXISTS postgis;')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'aed',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('version', sa.BigInteger(), nullable=False),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('position', models.geometry.PointType(), nullable=False),
        sa.Column('country_codes', sa.ARRAY(sa.Unicode(length=8), dimensions=1), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('aed_country_codes_idx', 'aed', ['country_codes'], unique=False, postgresql_using='gin')
    op.create_index('aed_position_idx', 'aed', ['position'], unique=False, postgresql_using='gist')
    op.create_table(
        'country',
        sa.Column('code', sa.Unicode(length=8), nullable=False),
        sa.Column('names', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('geometry', models.geometry.PolygonType(), nullable=False),
        sa.Column('label_position', models.geometry.PointType(), nullable=False),
        sa.PrimaryKeyConstraint('code'),
    )
    op.create_index('country_geometry_idx', 'country', ['geometry'], unique=False, postgresql_using='gist')
    op.create_table(
        'photo',
        sa.Column('id', sa.Unicode(length=32), nullable=False),
        sa.Column('node_id', sa.BigInteger(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column(
            'created_at',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('statement_timestamp()'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'state',
        sa.Column('key', sa.Unicode(), nullable=False),
        sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint('key'),
    )
    op.create_table(
        'photo_report',
        sa.Column('id', sa.Unicode(length=32), nullable=False),
        sa.Column('photo_id', sa.Unicode(length=32), nullable=False),
        sa.Column(
            'created_at',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('statement_timestamp()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['photo_id'],
            ['photo.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('photo_report_created_at_idx', 'photo_report', ['created_at'], unique=False)
    op.create_index('photo_report_photo_id_idx', 'photo_report', ['photo_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
