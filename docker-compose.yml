version: "3"

services:
  db:
    image: mongo
    restart: unless-stopped
    command:
      [
        "mongod",
        "--bind_ip_all",
        "--setParameter",
        "transactionLifetimeLimitSeconds=90",
        "--replSet",
        "rs0",
      ]

    volumes:
      - ./data/db:/data/db

  db-setup:
    image: mongo
    entrypoint: ["/bin/sh", "/mongo-init-replica.sh"]
    command: ["db:27017"]

    depends_on:
      - db

    volumes:
      - ./scripts/mongo-init-replica.sh:/mongo-init-replica.sh:ro

  app:
    image: backend:${TAG:-latest}
    restart: unless-stopped
    command:
      [
        "--host",
        "0.0.0.0",
        "--workers",
        "${WORKERS:-1}",
        "--timeout-keep-alive",
        "300",
        "--timeout-graceful-shutdown",
        "5",
      ]

    depends_on:
      - db

    env_file:
      - envs/app/${TAG:-dev}.env

    environment:
      MONGO_HOST: db

  cache:
    image: varnish:alpine
    restart: unless-stopped
    user: root
    command:
      [
        "varnishd",
        "-F",
        "-f",
        "/etc/varnish/default.vcl",
        "-s",
        "file,/var/lib/varnish/varnish_storage.bin,2G",
      ]

    depends_on:
      - app

    volumes:
      - ./default.vcl:/etc/varnish/default.vcl:ro
      - ./data/cache:/var/lib/varnish

  https:
    image: caddy:alpine
    restart: unless-stopped

    sysctls:
      net.core.rmem_max: 2500000
      net.core.wmem_max: 2500000

    depends_on:
      - cache

    ports:
      - ${LISTEN:-443}:443

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./cert:/cert:ro
