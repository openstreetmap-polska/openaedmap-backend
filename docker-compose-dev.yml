version: '3'
services:
    db:
        restart: always
        image: "postgis/postgis:15-3.3"
        shm_size: "512mb"
        env_file:
            - .env
        environment:
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
            POSTGRES_DB: "${POSTGRES_DB}"
        command: >
            -p ${POSTGRES_PORT}
            -c jit=off
            -c work_mem=32MB
            -c maintenance_work_mem=256MB
            -c random_page_cost=1.2
            -c effective_io_concurrency=100
            -c shared_preload_libraries=pg_stat_statements
            -c track_io_timing=on
            -c track_functions=pl
            -c wal_level=replica
            -c max_wal_senders=0
            -c synchronous_commit=on
            -c track_wal_io_timing=on
            -c checkpoint_timeout=15min
            -c checkpoint_completion_target=0.9
            -c max_wal_size=1024MB
            -c min_wal_size=512MB
            -c wal_compression=off
            -c wal_buffers=-1
            -c wal_writer_delay=200ms
            -c wal_writer_flush_after=1MB
            -c bgwriter_delay=200ms
            -c bgwriter_lru_maxpages=100
            -c bgwriter_lru_multiplier=2.0
            -c bgwriter_flush_after=0
            -c max_worker_processes=2
            -c max_parallel_workers_per_gather=1
            -c max_parallel_maintenance_workers=1
            -c max_parallel_workers=2
            -c parallel_leader_participation=on
            -c max_slot_wal_keep_size=1000MB
            -c maintenance_io_concurrency=100
            -c wal_recycle=off
            -c wal_init_zero=off
        networks:
            - dev-net
    backend:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile.dev
        env_file:
            - .env
        volumes:
            - ./backend:/app/backend
            - ./migrations:/app/migrations
            - ./alembic.ini:/app/alembic.ini
        command: ./docker-entrypoint.sh
        networks:
            - dev-net
        environment:
            DEV: 1
            WEB_CONCURRENCY: 1

    nginx:
        restart: always
        image: nginx:1.23.1-alpine
        ports:
            - 8080:80
        volumes:
            - ./nginx/nginx-proxy-dev.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
          - backend
        networks:
            - dev-net

networks:
    dev-net: