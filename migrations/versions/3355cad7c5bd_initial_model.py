"""initial model

Revision ID: 3355cad7c5bd
Revises: 
Create Date: 2022-10-23 14:26:55.738177

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3355cad7c5bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('countries',
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('feature_count', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='GEOMETRY', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('country_names', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('country_code')
    )
    op.create_geospatial_index('idx_countries_geometry', 'countries', ['geometry'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_table('metadata',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_processed_sequence', sa.String(), nullable=False),
    sa.CheckConstraint('id = 0'),
    sa.CheckConstraint('total_count >= 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('osm_nodes_views',
    sa.Column('view_id', sa.BigInteger(), nullable=False),
    sa.Column('node_id', sa.BigInteger(), nullable=False),
    sa.Column('seen_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('view_id')
    )
    op.create_index(op.f('ix_osm_nodes_views_node_id'), 'osm_nodes_views', ['node_id'], unique=False)
    op.create_geospatial_table('osm_nodes',
    sa.Column('node_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('added_in_changeset', sa.Integer(), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('geometry', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['country_code'], ['countries.country_code'], ),
    sa.PrimaryKeyConstraint('node_id')
    )
    op.create_geospatial_index('idx_osm_nodes_geometry', 'osm_nodes', ['geometry'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_osm_nodes_country_code'), 'osm_nodes', ['country_code'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_osm_nodes_country_code'), table_name='osm_nodes')
    op.drop_geospatial_index('idx_osm_nodes_geometry', table_name='osm_nodes', postgresql_using='gist', column_name='geometry')
    op.drop_geospatial_table('osm_nodes')
    op.drop_index(op.f('ix_osm_nodes_views_node_id'), table_name='osm_nodes_views')
    op.drop_table('osm_nodes_views')
    op.drop_table('metadata')
    op.drop_geospatial_index('idx_countries_geometry', table_name='countries', postgresql_using='gist', column_name='geometry')
    op.drop_geospatial_table('countries')
    # ### end Alembic commands ###
